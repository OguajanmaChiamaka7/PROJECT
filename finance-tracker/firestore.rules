rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // ========================================
    // USER DOCUMENTS AND SUBCOLLECTIONS
    // ========================================
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Subcollections under users/{userId}
      match /dailyTasks/{taskId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /goals/{goalId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /transactions/{transactionId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /badges/{badgeId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      match /notifications/{notificationId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Game state subcollection
      match /gameState/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Savings circle subcollection
      match /savingsCircles/{circleId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Gamification data subcollection
      match /gamification/{docId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Catch-all for any other subcollections under this user
      match /{subcollection}/{document} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
    
    // ========================================
    // TOP-LEVEL COLLECTIONS
    // ========================================
    
    // Game state (if stored at root level)
    match /gameState/{docId} {
      allow read, write: if request.auth != null &&
        (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null &&
        request.resource.data.userId == request.auth.uid;
    }
    
    // Savings circles (if stored at root level)
    match /savingsCircles/{circleId} {
      // Allow users to read circles they're members of
      allow read: if request.auth != null &&
        (resource == null || 
         resource.data.userId == request.auth.uid ||
         request.auth.uid in resource.data.members);
      
      // Allow users to write circles they own
      allow write: if request.auth != null &&
        (resource == null || resource.data.userId == request.auth.uid);
      
      // Allow creation if user is authenticated
      allow create: if request.auth != null &&
        request.resource.data.userId == request.auth.uid;
    }
    
    // Gamification data (if stored at root level)
    match /gamification/{docId} {
      allow read, write: if request.auth != null &&
        (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null &&
        request.resource.data.userId == request.auth.uid;
    }
    
    // Transactions
    match /transactions/{transactionId} {
      allow read, write: if request.auth != null &&
        (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null &&
        request.resource.data.userId == request.auth.uid;
    }
    
    // Goals
    match /goals/{goalId} {
      allow read, write: if request.auth != null &&
        (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null &&
        request.resource.data.userId == request.auth.uid;
    }
    
    // User badges
    match /userBadges/{badgeId} {
      allow read, write: if request.auth != null &&
        (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null &&
        request.resource.data.userId == request.auth.uid;
    }
    
    // Notifications
    match /notifications/{notificationId} {
      allow read, write: if request.auth != null &&
        (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null &&
        request.resource.data.userId == request.auth.uid;
    }
    
    // Daily tasks (if stored at root level)
    match /dailyTasks/{taskId} {
      allow read, write: if request.auth != null &&
        (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null &&
        request.resource.data.userId == request.auth.uid;
    }
    
    // Leaderboards (public read, authenticated write)
    match /leaderboards/{leaderboardId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
        (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null &&
        request.resource.data.userId == request.auth.uid;
    }

    // User Finance Tips Progress
    match /userFinanceTips/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Learning Progress
    match /learningProgress/{docId} {
      allow read, write: if request.auth != null &&
        (resource == null || resource.data.userId == request.auth.uid);
      allow create: if request.auth != null &&
        request.resource.data.userId == request.auth.uid;
    }

    // User Stats (for Savings Circle)
    match /userStats/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
    }

    // Deny all other access
    match /{document=**} {
      allow read, write: if false;
    }
  }
}